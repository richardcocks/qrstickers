@page
@model QRStickers.Pages.Meraki.NetworkModel
@{
    ViewData["Title"] = "Network Details";
}

<link rel="stylesheet" href="~/css/designer.css" />

<h1>Network: @Model.Network?.Name</h1>

@if (Model.Connection == null || Model.Network == null)
{
    <div class="alert alert-warning">
        <p>Network not found.</p>
        <p><a href="/Connections" class="btn btn-primary">Back to Connections</a></p>
    </div>
}
else
{
    <div style="margin-bottom: 30px; padding: 20px; background-color: #f9f9f9; border-radius: 4px; border: 1px solid #ddd;">
        <h2 style="margin-top: 0;">Network Information</h2>
        <div style="display: flex; align-items: center; gap: 20px;">
            <div>
                @if (!string.IsNullOrEmpty(Model.Network.Url))
                {
                    <a href="@Model.Network.Url" target="_blank" rel="noopener noreferrer" style="text-decoration: none;">
                        <img src="/qrcode?q=@Uri.EscapeDataString(Model.Network.Url)"
                             alt="QR Code for @Model.Network.Name - Dashboard Link"
                             style="width: 100px; height: 100px; border: 1px solid #ddd; border-radius: 4px; padding: 4px; background-color: #fff;" />
                    </a>
                }
                else
                {
                    <span style="color: #999; font-size: 0.9em;">No QR Code</span>
                }
            </div>
            <div>
                <p style="margin: 5px 0;">
                    <strong>Name:</strong> @Model.Network.Name
                </p>
                <p style="margin: 5px 0;">
                    <strong>Network ID:</strong> <span style="font-family: monospace; font-size: 0.9em;">@Model.Network.NetworkId</span>
                </p>
                @if (Model.Network.ProductTypes != null && Model.Network.ProductTypes.Any())
                {
                    <p style="margin: 5px 0;">
                        <strong>Product Types:</strong>
                        @for (int i = 0; i < Model.Network.ProductTypes.Count; i++)
                        {
                            var productType = Model.Network.ProductTypes[i];
                            if (Model.ProductTypesPresent.Contains(productType))
                            {
                                <strong>@productType</strong>
                            }
                            else
                            {
                                @productType
                            }

                            if (i < Model.Network.ProductTypes.Count - 1)
                            {
                                <text>, </text>
                            }
                        }
                    </p>
                }
                @if (!string.IsNullOrEmpty(Model.Network.Url))
                {
                    <p style="margin: 5px 0;">
                        <strong>Dashboard:</strong> <a href="@Model.Network.Url" target="_blank" rel="noopener noreferrer">Open in Meraki Dashboard</a>
                    </p>
                }
            </div>
        </div>
    </div>

    <h2>Devices</h2>

    @if (!Model.Devices.Any())
    {
        <div class="alert alert-info">
            <p>No devices found for this network.</p>
            <p><a href="/Meraki/SyncStatus?connectionId=@Model.Connection.Id&trigger=true">Sync Data</a></p>
        </div>
    }
    else
    {
        <table style="width: 100%; border-collapse: collapse;">
            <thead>
                <tr style="background-color: #f5f5f5; border-bottom: 2px solid #ddd;">
                    <th style="padding: 10px; text-align: center; width: 40px;">
                        <input type="checkbox" id="selectAllDevices" onchange="toggleSelectAll()" title="Select all devices" />
                    </th>
                    <th style="padding: 10px; text-align: left;">Device Name</th>
                    <th style="padding: 10px; text-align: left;">Serial Number</th>
                    <th style="padding: 10px; text-align: left;">Model</th>
                    <th style="padding: 10px; text-align: left;">Product Type</th>
                    <th style="padding: 10px; text-align: center; width: 120px;">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var device in Model.Devices)
                {
                    <tr style="border-bottom: 1px solid #ddd;">
                        <td style="padding: 10px; text-align: center;">
                            <input type="checkbox"
                                   class="device-checkbox"
                                   data-device-id="@device.Id"
                                   data-device-name="@(device.Name ?? "Unnamed Device")"
                                   data-device-serial="@device.Serial"
                                   data-connection-id="@Model.Connection.Id"
                                   onchange="onDeviceSelectionChanged()" />
                        </td>
                        <td style="padding: 10px;">
                            <strong>@(device.Name ?? "Unnamed Device")</strong>
                        </td>
                        <td style="padding: 10px; font-family: monospace; font-size: 0.9em;">
                            @device.Serial
                        </td>
                        <td style="padding: 10px;">
                            @(device.Model ?? "Unknown")
                        </td>
                        <td style="padding: 10px;">
                            @(device.ProductType ?? "Unknown")
                        </td>
                        <td style="padding: 10px; text-align: center;">
                            <button
                                data-export-button
                                data-device-id="@device.Id"
                                data-connection-id="@Model.Connection.Id"
                                data-device-name="@(device.Name ?? "Device")"
                                class="btn-export"
                                title="Export sticker for this device"
                                style="padding: 6px 12px; background-color: #2196F3; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 0.9em;">
                                ðŸ“¥ Export
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Bulk Export Actions -->
        <div class="bulk-actions" style="margin-top: 20px; padding: 15px; background-color: #f9f9f9; border-radius: 4px; border: 1px solid #ddd;">
            <button id="bulkExportBtn"
                    class="btn-primary"
                    onclick="openBulkExportModal()"
                    disabled
                    style="padding: 10px 20px; background-color: #2196F3; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 1em; opacity: 0.5;">
                ðŸ“¦ Export Selected (0)
            </button>
            <span id="selectionSummary" style="margin-left: 15px; color: #666; font-size: 0.9em;"></span>
        </div>
    }
}

<hr />
<p>
    <a href="/Meraki/Connection?connectionId=@Model.Connection?.Id">Back to Connection</a> |
    <a href="/">Back to home</a> |
    <a href="/Connections">Manage Connections</a>
</p>

@section Scripts {
    <!-- Fabric.js CDN (required for canvas rendering) -->
    <script src="https://cdn.jsdelivr.net/npm/fabric@5.3.0/dist/fabric.min.js"></script>

    <!-- JSZip library (required for bulk export ZIP generation) -->
    <script src="https://cdn.jsdelivr.net/npm/jszip@3.10.1/dist/jszip.min.js"></script>

    <!-- Fabric.js helper extensions (QR code, text, image placeholders) -->
    <script src="~/js/fabric-extensions.js"></script>

    <!-- Export functionality -->
    <script src="~/js/export-preview.js"></script>
    <script src="~/js/device-export.js"></script>
    <script src="~/js/multi-device-export.js"></script>
}
