@page
@using System.Text.Json
@model QRStickers.Pages.Templates.DesignerModel
@{
    ViewData["Title"] = Model.IsEditMode ? $"Edit Template: {Model.Template.Name}" : "Create New Template";
}

<link rel="stylesheet" href="~/css/designer.css" />

<style>
    .breadcrumb-nav {
        padding: 10px 20px;
        background: #f5f5f5;
        border-bottom: 1px solid #ddd;
        font-size: 14px;
    }

    .breadcrumb-nav a {
        color: #1976d2;
        text-decoration: none;
    }

    .breadcrumb-nav a:hover {
        text-decoration: underline;
    }

    .breadcrumb-nav span {
        margin: 0 8px;
        color: #999;
    }

    .system-template-banner {
        background: #fff3e0;
        border-left: 4px solid #ff9800;
        padding: 12px 20px;
        margin: 0;
        color: #e65100;
        font-size: 14px;
    }

    .system-template-banner strong {
        font-weight: 600;
    }
</style>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" style="margin: 20px 20px 0 20px;">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" style="margin: 20px 20px 0 20px;">
        @TempData["ErrorMessage"]
    </div>
}

@if (Model.IsSystemTemplate && Model.IsEditMode)
{
    <div class="system-template-banner">
        <strong>‚ö†Ô∏è System Template (Read-Only)</strong> - This is a read-only system template. To customize it, please clone it first from the Templates page.
    </div>
}

<div class="breadcrumb-nav">
    <a href="/Templates">Templates</a>
    <span>‚Ä∫</span>
    <strong>@Model.Template.Name</strong>
    @if (Model.IsSystemTemplate)
    {
        <span class="badge badge-system" style="margin-left: 10px; background: #e3f2fd; color: #1976d2; padding: 3px 8px; font-size: 11px; border-radius: 3px;">SYSTEM</span>
    }
</div>

<div class="designer-container">
    <!-- Top Toolbar -->
    <div class="designer-toolbar">
        <div class="toolbar-section">
            <h2 class="toolbar-title">@Model.Template.Name</h2>
        </div>

        <div class="toolbar-section toolbar-controls">
            <button type="button" id="btnZoomIn" class="btn-toolbar" title="Zoom In">
                <span>üîç+</span>
            </button>
            <button type="button" id="btnZoomOut" class="btn-toolbar" title="Zoom Out">
                <span>üîç‚àí</span>
            </button>
            <button type="button" id="btnZoomReset" class="btn-toolbar" title="Reset Zoom to 100%">
                <span id="zoomLevel">100%</span>
            </button>
            <span class="toolbar-divider"></span>

            <label class="toolbar-checkbox">
                <input type="checkbox" id="chkShowGrid" checked />
                <span>Grid</span>
            </label>
            <label class="toolbar-checkbox">
                <input type="checkbox" id="chkSnapToGrid" checked />
                <span>Snap</span>
            </label>
            <span class="toolbar-divider"></span>

            <label class="toolbar-input-group">
                <span>Width (mm):</span>
                <input type="number" id="pageWidth" value="@Model.Template.PageWidth" min="10" max="500" step="1" />
            </label>
            <label class="toolbar-input-group">
                <span>Height (mm):</span>
                <input type="number" id="pageHeight" value="@Model.Template.PageHeight" min="10" max="500" step="1" />
            </label>
        </div>

        <div class="toolbar-section">
            <a href="/Templates" class="btn btn-secondary" style="margin-right: 10px;">‚Üê Back to Templates</a>
            <button type="button" id="btnExport" class="btn btn-primary" style="margin-right: 10px;">üì• Export</button>
            <button type="button" id="btnSave" class="btn btn-primary">Save Template</button>
            <span id="saveStatus" class="save-status-tick">‚úì</span>
        </div>
    </div>

    <!-- Main Content Area -->
    <div class="designer-main">
        <!-- Left Sidebar: Element Palette -->
        <div class="designer-sidebar designer-sidebar-left">
            <h3 class="sidebar-title">Elements</h3>

            <div class="element-palette">
                <div class="palette-item" data-element-type="qrcode" draggable="true">
                    <div class="palette-icon">
                        <svg width="40" height="40" viewBox="0 0 40 40">
                            <rect x="2" y="2" width="36" height="36" fill="none" stroke="#333" stroke-width="2"/>
                            <rect x="6" y="6" width="10" height="10" fill="#333"/>
                            <rect x="24" y="6" width="10" height="10" fill="#333"/>
                            <rect x="6" y="24" width="10" height="10" fill="#333"/>
                            <rect x="20" y="20" width="6" height="6" fill="#333"/>
                        </svg>
                    </div>
                    <span class="palette-label">QR Code</span>
                </div>

                <div class="palette-item" data-element-type="text" draggable="true">
                    <div class="palette-icon">
                        <svg width="40" height="40" viewBox="0 0 40 40">
                            <text x="20" y="28" font-size="24" text-anchor="middle" fill="#333">T</text>
                        </svg>
                    </div>
                    <span class="palette-label">Text</span>
                </div>

                <div class="palette-item" data-element-type="image" draggable="true">
                    <div class="palette-icon">
                        <svg width="40" height="40" viewBox="0 0 40 40">
                            <rect x="4" y="4" width="32" height="32" fill="none" stroke="#333" stroke-width="2"/>
                            <circle cx="14" cy="14" r="4" fill="#333"/>
                            <path d="M 4 28 L 14 18 L 20 24 L 28 16 L 36 24 L 36 36 L 4 36 Z" fill="#333"/>
                        </svg>
                    </div>
                    <span class="palette-label">Image</span>
                </div>

                <div class="palette-item" data-element-type="rectangle" draggable="true">
                    <div class="palette-icon">
                        <svg width="40" height="40" viewBox="0 0 40 40">
                            <rect x="6" y="10" width="28" height="20" fill="none" stroke="#333" stroke-width="2"/>
                        </svg>
                    </div>
                    <span class="palette-label">Rectangle</span>
                </div>

                <div class="palette-item" data-element-type="line" draggable="true">
                    <div class="palette-icon">
                        <svg width="40" height="40" viewBox="0 0 40 40">
                            <line x1="6" y1="20" x2="34" y2="20" stroke="#333" stroke-width="2"/>
                        </svg>
                    </div>
                    <span class="palette-label">Line</span>
                </div>
            </div>
        </div>

        <!-- Center: Canvas -->
        <div class="designer-canvas-container">
            <div class="canvas-wrapper" id="canvasWrapper">
                <canvas id="designCanvas"></canvas>
            </div>
        </div>

        <!-- Right Sidebar: Property Inspector -->
        <div class="designer-sidebar designer-sidebar-right">
            <h3 class="sidebar-title">Properties</h3>

            <div id="propertyInspector" class="property-inspector">
                <div id="noSelection" class="property-panel">
                    <p class="text-muted">Select an element to edit its properties</p>
                </div>

                <!-- QR Code Properties -->
                <div id="qrcodeProperties" class="property-panel" style="display: none;">
                    <div class="property-group">
                        <label>Data Source</label>
                        <select id="qrDataSource" class="form-control">
                            <option value="">Select data source...</option>
                            <optgroup label="QR Code Images (Generated)">
                                <option value="device.QRCode">Device QR Code (Serial)</option>
                                <option value="network.QRCode">Network QR Code (URL)</option>
                                <option value="organization.QRCode">Organization QR Code (URL)</option>
                            </optgroup>
                            @if (Model.GlobalVariables.Any())
                            {
                                <optgroup label="Global Variables">
                                    @foreach (var gv in Model.GlobalVariables)
                                    {
                                        <option value="global.@gv.VariableName">@gv.VariableName (@gv.Description)</option>
                                    }
                                </optgroup>
                            }
                        </select>
                    </div>
                    <div class="property-group">
                        <label>Size</label>
                        <input type="number" id="qrSize" class="form-control" placeholder="Width/Height" />
                    </div>
                </div>

                <!-- Text Properties -->
                <div id="textProperties" class="property-panel" style="display: none;">
                    <div class="property-group">
                        <label>Text Content</label>
                        <input type="text" id="textContent" class="form-control" placeholder="Enter text or {{variable}}" />
                    </div>
                    <div class="property-group">
                        <label>Data Source (Optional)</label>
                        <select id="textDataSource" class="form-control">
                            <option value="">Static text (no binding)</option>
                            <option value="device.Serial">Device Serial</option>
                            <option value="device.Name">Device Name</option>
                            <option value="device.Model">Device Model</option>
                            <option value="network.Name">Network Name</option>
                            <option value="connection.DisplayName">Connection Name</option>
                            @foreach (var gv in Model.GlobalVariables)
                            {
                                <option value="global.@gv.VariableName">@gv.VariableName</option>
                            }
                        </select>
                    </div>
                    <div class="property-group">
                        <label>Font Family</label>
                        <select id="textFontFamily" class="form-control">
                            <option value="Arial">Arial</option>
                            <option value="Courier New">Courier New</option>
                            <option value="Times New Roman">Times New Roman</option>
                            <option value="Verdana">Verdana</option>
                        </select>
                    </div>
                    <div class="property-group">
                        <label>Font Size</label>
                        <input type="number" id="textFontSize" class="form-control" min="6" max="72" />
                    </div>
                    <div class="property-group">
                        <label>Font Weight</label>
                        <select id="textFontWeight" class="form-control">
                            <option value="normal">Normal</option>
                            <option value="bold">Bold</option>
                        </select>
                    </div>
                    <div class="property-group">
                        <label>Color</label>
                        <input type="color" id="textColor" class="form-control" />
                    </div>
                </div>

                <!-- Image Properties -->
                <div id="imageProperties" class="property-panel" style="display: none;">
                    <div id="customImageInfo" style="display: none;">
                        <!-- Custom image info populated by JavaScript -->
                    </div>
                </div>

                <!-- Rectangle Properties -->
                <div id="rectangleProperties" class="property-panel" style="display: none;">
                    <div class="property-group">
                        <label>Fill Color</label>
                        <input type="color" id="rectFill" class="form-control" />
                    </div>
                    <div class="property-group">
                        <label>Stroke Color</label>
                        <input type="color" id="rectStroke" class="form-control" />
                    </div>
                    <div class="property-group">
                        <label>Stroke Width</label>
                        <input type="number" id="rectStrokeWidth" class="form-control" min="0" max="10" />
                    </div>
                </div>

                <!-- Line Properties -->
                <div id="lineProperties" class="property-panel" style="display: none;">
                    <div class="property-group">
                        <label>Stroke Color</label>
                        <input type="color" id="lineStroke" class="form-control" />
                    </div>
                    <div class="property-group">
                        <label>Stroke Width</label>
                        <input type="number" id="lineStrokeWidth" class="form-control" min="1" max="10" />
                    </div>
                </div>

                <!-- Common Properties (Position/Size) -->
                <div id="commonProperties" class="property-panel" style="display: none;">
                    <h4 class="property-section-title">Position & Size</h4>
                    <div class="property-row">
                        <div class="property-group">
                            <label>X (mm)</label>
                            <input type="number" id="posX" class="form-control" step="0.1" />
                        </div>
                        <div class="property-group">
                            <label>Y (mm)</label>
                            <input type="number" id="posY" class="form-control" step="0.1" />
                        </div>
                    </div>
                    <div class="property-row">
                        <div class="property-group">
                            <label>Width (mm)</label>
                            <input type="number" id="sizeWidth" class="form-control" step="0.1" />
                        </div>
                        <div class="property-group">
                            <label>Height (mm)</label>
                            <input type="number" id="sizeHeight" class="form-control" step="0.1" />
                        </div>
                    </div>
                    <div class="property-group">
                        <label>Rotation (¬∞)</label>
                        <input type="number" id="rotation" class="form-control" min="0" max="360" />
                    </div>
                    <h4 class="property-section-title">Layer Order</h4>
                    <div class="property-row">
                        <div class="property-group">
                            <button type="button" id="btnBringToFront" class="btn-layer" title="Bring to Front">‚¨ÜÔ∏è To Front</button>
                        </div>
                        <div class="property-group">
                            <button type="button" id="btnSendToBack" class="btn-layer" title="Send to Back">‚¨áÔ∏è To Back</button>
                        </div>
                    </div>
                    <div class="property-row">
                        <div class="property-group">
                            <button type="button" id="btnBringForward" class="btn-layer" title="Bring Forward">‚Üë Forward</button>
                        </div>
                        <div class="property-group">
                            <button type="button" id="btnSendBackward" class="btn-layer" title="Send Backward">‚Üì Backward</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bottom Status Bar -->
    <div class="designer-statusbar">
        <span id="statusText">Ready</span>
        <span class="statusbar-divider">|</span>
        <span id="cursorPos">X: 0mm, Y: 0mm</span>
        <span class="statusbar-divider">|</span>
        <span id="selectedInfo">No selection</span>
    </div>

    <!-- Export Modal -->
    <div id="exportModal" class="modal" style="display: none;">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Export Template Preview</h3>
                <button type="button" class="modal-close" id="btnCloseModal">&times;</button>
            </div>

            <div class="modal-body">
                <div class="export-controls">
                    <!-- Format Selection -->
                    <div class="control-group">
                        <label class="control-label">Format:</label>
                        <div class="radio-group">
                            <label class="radio-label">
                                <input type="radio" name="exportFormat" value="png" checked />
                                <span>PNG (raster image, better for sharing)</span>
                            </label>
                            <label class="radio-label">
                                <input type="radio" name="exportFormat" value="svg" />
                                <span>SVG (vector, editable in design tools)</span>
                            </label>
                        </div>
                    </div>

                    <!-- PNG-Specific Options -->
                    <div id="pngOptions" class="control-group">
                        <label class="control-label">Resolution (DPI):</label>
                        <div class="radio-group">
                            <label class="radio-label">
                                <input type="radio" name="pngDpi" value="96" checked />
                                <span>96 DPI (web resolution, fast)</span>
                            </label>
                            <label class="radio-label">
                                <input type="radio" name="pngDpi" value="150" />
                                <span>150 DPI (medium quality)</span>
                            </label>
                            <label class="radio-label">
                                <input type="radio" name="pngDpi" value="300" />
                                <span>300 DPI (print quality, larger file)</span>
                            </label>
                        </div>

                        <label class="control-label" style="margin-top: 15px;">Background:</label>
                        <div class="radio-group">
                            <label class="radio-label">
                                <input type="radio" name="pngBackground" value="white" checked />
                                <span>White</span>
                            </label>
                            <label class="radio-label">
                                <input type="radio" name="pngBackground" value="transparent" />
                                <span>Transparent (PNG with alpha channel)</span>
                            </label>
                        </div>
                    </div>
                </div>

                <!-- Preview Pane -->
                <div class="preview-section">
                    <label class="control-label">Preview:</label>
                    <div class="preview-container" id="previewContainer">
                        <canvas id="previewCanvas" style="border: 1px solid #ccc; background: white;"></canvas>
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="btnCancelExport">Cancel</button>
                <button type="button" class="btn btn-primary" id="btnDownload">Download</button>
            </div>
        </div>
    </div>

    <!-- Modal Overlay -->
    <div id="exportModalOverlay" class="modal-overlay" style="display: none;"></div>
</div>

<!-- Hidden Form for Saving -->
<form method="post" id="saveForm" style="display: none;">
    <input type="hidden" name="Template.Id" value="@Model.Template.Id" />
    <input type="hidden" name="Template.Name" id="templateName" value="@Model.Template.Name" />
    <input type="hidden" name="Template.Description" id="templateDescription" value="@Model.Template.Description" />
    <input type="hidden" name="Template.ConnectionId" id="templateConnectionId" value="@Model.Template.ConnectionId" />
    <input type="hidden" name="Template.PageWidth" id="templatePageWidth" value="@Model.Template.PageWidth" />
    <input type="hidden" name="Template.PageHeight" id="templatePageHeight" value="@Model.Template.PageHeight" />
    <input type="hidden" name="Template.ProductTypeFilter" id="templateProductTypeFilter" value="@Model.Template.ProductTypeFilter" />
    <input type="hidden" name="Template.IsRackMount" id="templateIsRackMount" value="@Model.Template.IsRackMount.ToString().ToLower()" />
    <input type="hidden" name="Template.IsDefault" id="templateIsDefault" value="@Model.Template.IsDefault.ToString().ToLower()" />
    <input type="hidden" name="Template.TemplateJson" id="templateJson" value="" />
</form>

@section Scripts {
    <!-- Fabric.js CDN -->
    <script src="https://cdn.jsdelivr.net/npm/fabric@5.3.0/dist/fabric.min.js"></script>

    <!-- Designer Scripts -->
    <script src="~/js/fabric-extensions.js"></script>
    <script src="~/js/export-preview.js"></script>
    <script src="~/js/designer.js"></script>

    <script>
        // Initialize designer with template data
        (function() {
            const templateData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(new {
                pageWidth = Model.Template.PageWidth,
                pageHeight = Model.Template.PageHeight,
                templateJson = Model.Template.TemplateJson
            }, JsonSerializerOptions.Web));
            const uploadedImages = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(
                Model.UploadedImages.Select(img => new {
                    id = img.Id,
                    name = img.Name,
                    dataUri = img.DataUri,
                    widthPx = img.WidthPx,
                    heightPx = img.HeightPx
                }),
                JsonSerializerOptions.Web
            ));
            const editMode = @Model.IsEditMode.ToString().ToLower();
            const systemTemplate = @Model.IsSystemTemplate.ToString().ToLower();

            document.addEventListener('DOMContentLoaded', function() {
                initDesigner(templateData, editMode, systemTemplate, uploadedImages);
            });
        })();
    </script>
}
